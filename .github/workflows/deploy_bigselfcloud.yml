name: Build and Deploy to Big Self Cloud

on:
  workflow_dispatch:  # Trigger manually


env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use cache
      id: cache-rust
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        path: |
          /home/runner/.cargo
          /home/runner/work/self-cloud/self-cloud/target
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
            
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y clang cmake libevent-dev libclang-dev libcurl4-openssl-dev curl gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    - run: rustup toolchain install nightly-2024-08-15
    - name: Add wasm32
      run: rustup target add wasm32-unknown-unknown
  
    - name: Add aarch64
      run: rustup target add aarch64-unknown-linux-gnu

    - name: Add aarch64 to Cargo.toml
      run: |
        mkdir .cargo
        echo "bin-target-triple = \"aarch64-unknown-linux-gnu\"" >> Cargo.toml
        cp .github/deploy_arm_cargoconfig.toml .cargo/config.toml
        cat .cargo/config.toml

    - name: Install Cargo Leptos
      run: cargo install cargo-leptos

    - name: Build
      run: cargo leptos build --release
        
    - name: Build Docker image
      run: |
        docker build -f Dockerfile.arm64 --platform linux/arm64 -t syncedcrt:latest .
    - name: Save Docker image to a .tar file
      run: |
        docker save syncedcrt:latest -o syncedcrt.tar.gz
    - name: Push To SelfCloud
      run: |
        curl --location --fail --show-error 'https://bigcloud.deepwith.in/cloud/image/push' --form 'project_id="1c167755-6fc3-44fa-b538-9a5d75374a60"' --form "token=$SELFCLOUD_TOKEN" --form 'image=@"syncedcrt.tar.gz"'
      env:
        SELFCLOUD_TOKEN: ${{ secrets.BIGCLOUD_TOKEN }}